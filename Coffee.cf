-- tokens --------------------------------------------------
x
token UIdent (upper (letter | digit | '_')*) ;

token LIdent (lower (letter | digit | '_')*) ;

-- programs ------------------------------------------------

entrypoints Program ;

Program. Program ::= [TopDef] ;

TopStmt. TopDef ::= Stmt ;

TopType. TopDef ::= "type" LIdent [LIdent] "=" [TConstr] ";" ;

Constr.  TConstr ::= UIdent [LIdent] ;

separator LIdent "" ;

separator TConstr "|" ;

separator TopDef "" ;

Arg. 	   Arg ::= LIdent ":" Type ;

separator  Arg "," ;

-- statements ----------------------------------------------

Block.     Block ::= "{" [Stmt] "}" ;

separator  Stmt "" ;

Decl.      Stmt ::= "let" LIdent ":" Type "=" Expr ";" ;

DeclNT.    Stmt ::= "let" LIdent "=" Expr ";" ;

CondElse.  Stmt ::= "if" Expr Block "else" Block ;

SExp.      Stmt ::= Expr  ";" ;

-- Types ---------------------------------------------------

TVar.      Type ::= LIdent ;

TFun.      Type ::= Type "->" Type;

-- Expressions ---------------------------------------------

EFunNamed. Expr6 ::= LIdent "(" [Arg] ")" "->" Type Block ;

EFunAnony. Expr6 ::= "(" [Arg] ")" "->" Type Block ;

EBlock.    Expr6 ::= Block ;

EVar.      Expr6 ::= LIdent ;

ELitInt.   Expr6 ::= Integer ;

EApp.      Expr5 ::=  Expr6 "(" [Expr] ")" ;

EString.   Expr6 ::= String ;

Neg.       Expr5 ::= "-" Expr6 ;

Not.       Expr5 ::= "!" Expr6 ;

EMul.      Expr4 ::= Expr4 MulOp Expr5 ;

EAdd.      Expr3 ::= Expr3 AddOp Expr4 ;

ERel.      Expr2 ::= Expr2 RelOp Expr3 ;

EAnd.      Expr1 ::= Expr2 "&&" Expr1 ;

EOr.       Expr ::= Expr1 "||" Expr ;

coercions  Expr 6 ;

separator  Expr "," ;

-- operators -----------------------------------------------

Plus.      AddOp ::= "+" ;

Minus.     AddOp ::= "-" ;

Times.     MulOp ::= "*" ;

Div.       MulOp ::= "/" ;

Mod.       MulOp ::= "%" ;

LTH.       RelOp ::= "<" ;

LE.        RelOp ::= "<=" ;

GTH.       RelOp ::= ">" ;

GE.        RelOp ::= ">=" ;

EQU.       RelOp ::= "==" ;

NE.        RelOp ::= "!=" ;

-- comments ------------------------------------------------

comment    "#" ;

comment    "//" ;

comment    "/*" "*/" ;
